/*-------------------------------------------------------------------------+
|                                                                          |
| Copyright 2012 Technische Universitaet Muenchen and                      |
| Fraunhofer-Institut fuer Experimentelles Software Engineering (IESE)     |
|                                                                          |
| Licensed under the Apache License, Version 2.0 (the "License");          |
| you may not use this file except in compliance with the License.         |
| You may obtain a copy of the License at                                  |
|                                                                          |
|    http://www.apache.org/licenses/LICENSE-2.0                            |
|                                                                          |
| Unless required by applicable law or agreed to in writing, software      |
| distributed under the License is distributed on an "AS IS" BASIS,        |
| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. |
| See the License for the specific language governing permissions and      |
| limitations under the License.                                           |
|                                                                          |
+-------------------------------------------------------------------------*/

/**
 * <copyright>
 * </copyright>
 *
 * $Id: QmItemProviderAdapterFactory.java 4974 2012-02-17 09:34:10Z lochmann $
 */
package de.quamoco.qm.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.Disposable;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemColorProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import de.quamoco.qm.util.QmAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class QmItemProviderAdapterFactory extends QmAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the item providers created, so that they can be {@link #dispose disposed}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Disposable disposable = new Disposable();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public QmItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(IItemColorProvider.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.FactorRefinement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactorRefinementItemProvider factorRefinementItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.FactorRefinement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactorRefinementAdapter() {
		if (factorRefinementItemProvider == null) {
			factorRefinementItemProvider = new FactorRefinementItemProvider(this);
		}

		return factorRefinementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Factor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactorItemProvider factorItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Factor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactorAdapter() {
		if (factorItemProvider == null) {
			factorItemProvider = new FactorItemProvider(this);
		}

		return factorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Impact} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImpactItemProvider impactItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Impact}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImpactAdapter() {
		if (impactItemProvider == null) {
			impactItemProvider = new ImpactItemProvider(this);
		}

		return impactItemProvider;
	}

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.QualityModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualityModelAdapter() {
		return new QualityModelItemProvider(this);
	}

	/**
	 * This keeps track of the one adapter used for all {@link java.util.Map.Entry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link java.util.Map.Entry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Tag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagItemProvider tagItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Tag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagAdapter() {
		if (tagItemProvider == null) {
			tagItemProvider = new TagItemProvider(this);
		}

		return tagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Measure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureItemProvider measureItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Measure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureAdapter() {
		if (measureItemProvider == null) {
			measureItemProvider = new MeasureItemProvider(this);
		}

		return measureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.ManualInstrument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManualInstrumentItemProvider manualInstrumentItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.ManualInstrument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManualInstrumentAdapter() {
		if (manualInstrumentItemProvider == null) {
			manualInstrumentItemProvider = new ManualInstrumentItemProvider(this);
		}

		return manualInstrumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.ToolBasedInstrument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToolBasedInstrumentItemProvider toolBasedInstrumentItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.ToolBasedInstrument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToolBasedInstrumentAdapter() {
		if (toolBasedInstrumentItemProvider == null) {
			toolBasedInstrumentItemProvider = new ToolBasedInstrumentItemProvider(this);
		}

		return toolBasedInstrumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.QIESLEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QIESLEvaluationItemProvider qieslEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.QIESLEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQIESLEvaluationAdapter() {
		if (qieslEvaluationItemProvider == null) {
			qieslEvaluationItemProvider = new QIESLEvaluationItemProvider(this);
		}

		return qieslEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.TextEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextEvaluationItemProvider textEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.TextEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextEvaluationAdapter() {
		if (textEvaluationItemProvider == null) {
			textEvaluationItemProvider = new TextEvaluationItemProvider(this);
		}

		return textEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.SingleMeasureEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleMeasureEvaluationItemProvider singleMeasureEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.SingleMeasureEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleMeasureEvaluationAdapter() {
		if (singleMeasureEvaluationItemProvider == null) {
			singleMeasureEvaluationItemProvider = new SingleMeasureEvaluationItemProvider(this);
		}

		return singleMeasureEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.NormalizationMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NormalizationMeasureItemProvider normalizationMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.NormalizationMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNormalizationMeasureAdapter() {
		if (normalizationMeasureItemProvider == null) {
			normalizationMeasureItemProvider = new NormalizationMeasureItemProvider(this);
		}

		return normalizationMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.QIESLAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QIESLAggregationItemProvider qieslAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.QIESLAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQIESLAggregationAdapter() {
		if (qieslAggregationItemProvider == null) {
			qieslAggregationItemProvider = new QIESLAggregationItemProvider(this);
		}

		return qieslAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.TextAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextAggregationItemProvider textAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.TextAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextAggregationAdapter() {
		if (textAggregationItemProvider == null) {
			textAggregationItemProvider = new TextAggregationItemProvider(this);
		}

		return textAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.FactorRanking} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactorRankingItemProvider factorRankingItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.FactorRanking}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactorRankingAdapter() {
		if (factorRankingItemProvider == null) {
			factorRankingItemProvider = new FactorRankingItemProvider(this);
		}

		return factorRankingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.LinearIncreasingFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearIncreasingFunctionItemProvider linearIncreasingFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.LinearIncreasingFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearIncreasingFunctionAdapter() {
		if (linearIncreasingFunctionItemProvider == null) {
			linearIncreasingFunctionItemProvider = new LinearIncreasingFunctionItemProvider(this);
		}

		return linearIncreasingFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.LinearDecreasingFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearDecreasingFunctionItemProvider linearDecreasingFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.LinearDecreasingFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearDecreasingFunctionAdapter() {
		if (linearDecreasingFunctionItemProvider == null) {
			linearDecreasingFunctionItemProvider = new LinearDecreasingFunctionItemProvider(this);
		}

		return linearDecreasingFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.WeightedSumFactorAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedSumFactorAggregationItemProvider weightedSumFactorAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.WeightedSumFactorAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedSumFactorAggregationAdapter() {
		if (weightedSumFactorAggregationItemProvider == null) {
			weightedSumFactorAggregationItemProvider = new WeightedSumFactorAggregationItemProvider(this);
		}

		return weightedSumFactorAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.FindingsUnionMeasureAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FindingsUnionMeasureAggregationItemProvider findingsUnionMeasureAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.FindingsUnionMeasureAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFindingsUnionMeasureAggregationAdapter() {
		if (findingsUnionMeasureAggregationItemProvider == null) {
			findingsUnionMeasureAggregationItemProvider = new FindingsUnionMeasureAggregationItemProvider(this);
		}

		return findingsUnionMeasureAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.NumberMeanMeasureAggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberMeanMeasureAggregationItemProvider numberMeanMeasureAggregationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.NumberMeanMeasureAggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberMeanMeasureAggregationAdapter() {
		if (numberMeanMeasureAggregationItemProvider == null) {
			numberMeanMeasureAggregationItemProvider = new NumberMeanMeasureAggregationItemProvider(this);
		}

		return numberMeanMeasureAggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.ManualEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManualEvaluationItemProvider manualEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.ManualEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManualEvaluationAdapter() {
		if (manualEvaluationItemProvider == null) {
			manualEvaluationItemProvider = new ManualEvaluationItemProvider(this);
		}

		return manualEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.WeightedSumMultiMeasureEvaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WeightedSumMultiMeasureEvaluationItemProvider weightedSumMultiMeasureEvaluationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.WeightedSumMultiMeasureEvaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWeightedSumMultiMeasureEvaluationAdapter() {
		if (weightedSumMultiMeasureEvaluationItemProvider == null) {
			weightedSumMultiMeasureEvaluationItemProvider = new WeightedSumMultiMeasureEvaluationItemProvider(this);
		}

		return weightedSumMultiMeasureEvaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.MeasureRanking} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureRankingItemProvider measureRankingItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.MeasureRanking}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureRankingAdapter() {
		if (measureRankingItemProvider == null) {
			measureRankingItemProvider = new MeasureRankingItemProvider(this);
		}

		return measureRankingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.QualityModelResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualityModelResultItemProvider qualityModelResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.QualityModelResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualityModelResultAdapter() {
		if (qualityModelResultItemProvider == null) {
			qualityModelResultItemProvider = new QualityModelResultItemProvider(this);
		}

		return qualityModelResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.NumberMeasurementResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberMeasurementResultItemProvider numberMeasurementResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.NumberMeasurementResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberMeasurementResultAdapter() {
		if (numberMeasurementResultItemProvider == null) {
			numberMeasurementResultItemProvider = new NumberMeasurementResultItemProvider(this);
		}

		return numberMeasurementResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.FindingsMeasurementResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FindingsMeasurementResultItemProvider findingsMeasurementResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.FindingsMeasurementResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFindingsMeasurementResultAdapter() {
		if (findingsMeasurementResultItemProvider == null) {
			findingsMeasurementResultItemProvider = new FindingsMeasurementResultItemProvider(this);
		}

		return findingsMeasurementResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.DoubleInterval} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleIntervalItemProvider doubleIntervalItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.DoubleInterval}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleIntervalAdapter() {
		if (doubleIntervalItemProvider == null) {
			doubleIntervalItemProvider = new DoubleIntervalItemProvider(this);
		}

		return doubleIntervalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.EvaluationResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationResultItemProvider evaluationResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.EvaluationResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationResultAdapter() {
		if (evaluationResultItemProvider == null) {
			evaluationResultItemProvider = new EvaluationResultItemProvider(this);
		}

		return evaluationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.SingleMeasureEvaluationResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleMeasureEvaluationResultItemProvider singleMeasureEvaluationResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.SingleMeasureEvaluationResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleMeasureEvaluationResultAdapter() {
		if (singleMeasureEvaluationResultItemProvider == null) {
			singleMeasureEvaluationResultItemProvider = new SingleMeasureEvaluationResultItemProvider(this);
		}

		return singleMeasureEvaluationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.MultiMeasureEvaluationResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiMeasureEvaluationResultItemProvider multiMeasureEvaluationResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.MultiMeasureEvaluationResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiMeasureEvaluationResultAdapter() {
		if (multiMeasureEvaluationResultItemProvider == null) {
			multiMeasureEvaluationResultItemProvider = new MultiMeasureEvaluationResultItemProvider(this);
		}

		return multiMeasureEvaluationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.MeasureRankingEvaluationResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureRankingEvaluationResultItemProvider measureRankingEvaluationResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.MeasureRankingEvaluationResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureRankingEvaluationResultAdapter() {
		if (measureRankingEvaluationResultItemProvider == null) {
			measureRankingEvaluationResultItemProvider = new MeasureRankingEvaluationResultItemProvider(this);
		}

		return measureRankingEvaluationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.FindingMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FindingMessageItemProvider findingMessageItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.FindingMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFindingMessageAdapter() {
		if (findingMessageItemProvider == null) {
			findingMessageItemProvider = new FindingMessageItemProvider(this);
		}

		return findingMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Tool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToolItemProvider toolItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Tool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToolAdapter() {
		if (toolItemProvider == null) {
			toolItemProvider = new ToolItemProvider(this);
		}

		return toolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Source} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceItemProvider sourceItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Source}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceAdapter() {
		if (sourceItemProvider == null) {
			sourceItemProvider = new SourceItemProvider(this);
		}

		return sourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Measurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasurementItemProvider measurementItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Measurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasurementAdapter() {
		if (measurementItemProvider == null) {
			measurementItemProvider = new MeasurementItemProvider(this);
		}

		return measurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Specialization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecializationItemProvider specializationItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Specialization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecializationAdapter() {
		if (specializationItemProvider == null) {
			specializationItemProvider = new SpecializationItemProvider(this);
		}

		return specializationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.Decomposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecompositionItemProvider decompositionItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.Decomposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecompositionAdapter() {
		if (decompositionItemProvider == null) {
			decompositionItemProvider = new DecompositionItemProvider(this);
		}

		return decompositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.quamoco.qm.MeasureRefinement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureRefinementItemProvider measureRefinementItemProvider;

	/**
	 * This creates an adapter for a {@link de.quamoco.qm.MeasureRefinement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureRefinementAdapter() {
		if (measureRefinementItemProvider == null) {
			measureRefinementItemProvider = new MeasureRefinementItemProvider(this);
		}

		return measureRefinementItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * Associates an adapter with a notifier via the base implementation, then records it to ensure it will be disposed.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected void associate(Adapter adapter, Notifier target) {
		super.associate(adapter, target);
		if (adapter != null) {
			disposable.add(adapter);
		}
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		disposable.dispose();
	}

}
